{"version":3,"file":"static/js/movies.23c5a39a.chunk.js","mappings":"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","sources":["components/MoviesList/MoviesList.styled.jsx","components/MoviesList/MoviesList.jsx","components/Button/Button.styled.jsx","components/Button/Button.jsx","components/SearchBar/SearchBar.styled.jsx","components/SearchBar/SearchBar.jsx","pages/Movies/Movies.styled.jsx","pages/Movies/Movies.jsx","services/api.jsx"],"sourcesContent":["import { Link } from 'react-router-dom';\nimport styled from 'styled-components';\n\nexport const List = styled.ul`\n  display: flex;\n  flex-wrap: wrap;\n  justify-content: center;\n  gap: 32px;\n  margin: 0px auto;\n  padding: 0px;\n  list-style: none;\n`;\n\nexport const Item = styled.li`\n  margin-bottom: 30px;\n\n  &:nth-last-child(-n + 2) {\n    margin-bottom: 0;\n  }\n`;\n\nexport const SectionTitle = styled.h3`\n  margin-bottom: 20px;\n  font-size: 20px;\n  text-transform: uppercase;\n`;\n\nexport const LinkTitle = styled(Link)`\n  text-decoration: none;\n  color: #fff;\n\n  &:hover,\n  &:focus {\n    color: #aaa;\n  }\n`;\n\nexport const Img = styled.img`\n  width: 340px;\n  height: 476px;\n\n  &:hover {\n    scale: 105%;\n    transition: scale 250ms cubic-bezier(0.175, 0.885, 0.32, 1.275);\n  }\n`;\n\nexport const MovieTitle = styled.p`\n  max-width: 340px;\n  margin-top: 10px;\n  font-size: 20px;\n`;\n","import { useLocation } from 'react-router-dom';\n\nimport PropTypes from 'prop-types';\nimport {\n  List,\n  Item,\n  SectionTitle,\n  LinkTitle,\n  Img,\n  MovieTitle,\n} from './MoviesList.styled';\n\nconst MoviesList = ({ movies, sectionTitle = null }) => {\n  const location = useLocation();\n  const baseImgUrl = 'https://image.tmdb.org/t/p/w342/';\n  const defaultImg = 'https://i.ibb.co/nw331jk/1.jpg';\n\n  return (\n    <>\n      {sectionTitle && <SectionTitle>{sectionTitle}</SectionTitle>}\n      <List>\n        {movies.map(({ id, title, poster_path }) => {\n          return (\n            <Item key={id}>\n              <LinkTitle state={{ from: location }} to={`/movies/${id}`}>\n                <Img\n                  src={poster_path ? `${baseImgUrl}${poster_path}` : defaultImg}\n                  alt={title}\n                />\n                <MovieTitle>{title}</MovieTitle>\n              </LinkTitle>\n            </Item>\n          );\n        })}\n      </List>\n    </>\n  );\n};\nexport default MoviesList;\n\nMoviesList.propTypes = {\n  movies: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.number.isRequired,\n      title: PropTypes.string,\n      poster_path: PropTypes.string,\n    })\n  ),\n  sectionTitle: PropTypes.string,\n};\n","import styled from 'styled-components';\n\nexport const ButtonContainer = styled.div`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n`;\nexport const LoadButton = styled.button`\n  padding: 2px 10px 6px 10px;\n  background-color: rgba(255, 255, 255, 0.1);\n  color: #fff;\n  text-decoration: none;\n  border-radius: 5px;\n  border: none;\n`;\n","import PropTypes from 'prop-types';\nimport { ButtonContainer, LoadButton } from './Button.styled.jsx';\n\nconst Button = ({ onLoadMore }) => {\n  return (\n    <ButtonContainer onClick={onLoadMore}>\n      <LoadButton type=\"button\">Load more</LoadButton>\n    </ButtonContainer>\n  );\n};\nexport default Button;\n\nButton.propTypes = {\n  onLoadMore: PropTypes.func,\n};\n","import styled from 'styled-components';\n\nexport const Form = styled.form`\n  display: flex;\n  justify-content: center;\n  padding-bottom: 20px;\n`;\n\nexport const Input = styled.input`\n  width: 530px;\n  height: 40px;\n  padding: 0 20px;\n  background-color: hsl(0, 0%, 7%);\n  color: hsla(0, 100%, 100%, 0.88);\n  font-size: 16px;\n  border-radius: 10px;\n  border: 1px solid hsl(0, 0%, 18.82%);\n  box-shadow: inset 0 1px 2px hsla(0, 0%, 0%, 0);\n\n  &:hover,\n  &:focus {\n    border: 1px solid rgba(255, 255, 255, 0.2);\n    outline-style: none;\n  }\n`;\n\nexport const Button = styled.button`\n  margin-left: 2px;\n  height: 40px;\n  padding: 0 20px;\n  background-color: hsla(0, 0%, 100%, 0.08);\n  color: #fff;\n  font-size: 16px;\n  border-radius: 10px;\n  border: 1px solid hsl(0, 0%, 18.82%);\n  cursor: pointer;\n\n  &:hover,\n  &:focus {\n    background-color: rgba(255, 255, 255, 0.2);\n    border: 1px solid rgba(255, 255, 255, 0.2);\n  }\n`;\n","import { useState } from 'react';\nimport { Notify } from 'notiflix';\nimport PropTypes from 'prop-types';\nimport { FiSearch } from 'react-icons/fi';\n\nimport { Form, Input, Button } from './SearchBar.styled.jsx';\n\nconst SearchBar = ({ onSubmit }) => {\n  const [query, setQuery] = useState('');\n\n  const changeHandler = event => {\n    const { value } = event.target;\n    setQuery(value);\n  };\n\n  const submitHandler = event => {\n    event.preventDefault();\n    if (query === '') {\n      Notify.failure(`Please enter the film name`, {\n        position: 'center-top',\n        width: '300px',\n        fontSize: '14px',\n        failure: {\n          background: '#a55555',\n        },\n      });\n    }\n    onSubmit(query);\n    setQuery('');\n  };\n\n  return (\n    <>\n      <Form onSubmit={submitHandler}>\n        <Input\n          onChange={changeHandler}\n          type=\"text\"\n          name=\"query\"\n          value={query}\n          autoComplete=\"off\"\n        />\n        <Button type=\"submit\">\n          <span>\n            <FiSearch size={25} />\n          </span>\n        </Button>\n      </Form>\n    </>\n  );\n};\nexport default SearchBar;\n\nSearchBar.propTypes = {\n  onSubmit: PropTypes.func.isRequired,\n};\n","import styled from 'styled-components';\n\nexport const Section = styled.section`\n  display: flex;\n  justify-content: center;\n  padding-top: 20px;\n  padding-bottom: 20px;\n`;\n\nexport const Container = styled.div`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  width: 1280px;\n  font-size: 24px;\n`;\n// export const Button = styled.button`\n//   padding: 2px 10px 6px 10px;\n//   background-color: rgba(255, 255, 255, 0.1);\n//   color: #fff;\n//   text-decoration: none;\n//   border-radius: 5px;\n//   border: none;\n// `;\n","import { useState, useEffect } from 'react';\nimport { useSearchParams } from 'react-router-dom';\nimport { searchMovieByQuery } from '../../services/api';\nimport Loader from '../../components/Loader/Loader';\nimport Button from 'components/Button/Button';\nimport SearchBar from '../../components/SearchBar/SearchBar';\nimport MoviesList from '../../components/MoviesList/MoviesList';\n\nimport { Section, Container } from './Movies.styled.jsx';\n\nconst Movies = () => {\n  const [isLoading, setIsLoading] = useState(false);\n  const [loadMore, setLoadMore] = useState(false);\n  const [page, setPage] = useState(1);\n\n  const [searchMovies, setSearchMovies] = useState([]);\n\n  const [searchParams, setSearchParams] = useSearchParams();\n  const per_page = 20;\n\n  useEffect(() => {\n    async function fetchMovies() {\n      const query = searchParams.get('query') ?? '';\n      if (query?.trim()) {\n        setIsLoading(true);\n        const { results, total_results } = await searchMovieByQuery(\n          query,\n          page\n        );\n        setIsLoading(false);\n        if (results.length !== 0) {\n          setSearchMovies(prev => [...prev, ...results]);\n          setLoadMore(page < Math.ceil(total_results / per_page));\n        } else {\n          alert('no movies found');\n        }\n      }\n    }\n\n    fetchMovies();\n  }, [searchParams, page]);\n\n  const onSubmitHandler = q => {\n    setSearchParams({ query: q });\n    // setPage(1);\n    // setSearchMovies([]);\n  };\n  const onLoadMore = () => {\n    setPage(page + 1);\n  };\n\n  return (\n    <Section>\n      <Container>\n        <SearchBar onSubmit={onSubmitHandler} />\n        {isLoading && <Loader />}\n\n        {searchMovies.length > 0 && <MoviesList movies={searchMovies} />}\n        {loadMore && <Button onLoadMore={onLoadMore} />}\n      </Container>\n    </Section>\n  );\n};\nexport default Movies;\n","import axios from 'axios';\n\naxios.defaults.baseURL = 'https://api.themoviedb.org/3';\nconst API_KEY = '894a5fcb5eb3af426933275e70f0cd83';\n\nexport const trendingMovies = async () => {\n  const {\n    data: { results },\n  } = await axios.get(`/trending/movie/day?api_key=${API_KEY}&page=1`);\n  return results;\n};\n\nexport const searchMovieByQuery = async (query, page = 1) => {\n  const { data } = await axios.get(\n    `/search/movie?api_key=${API_KEY}&query=${query}&page=${page}`\n  );\n  return data;\n};\n\nexport const fetchMovieById = async id => {\n  const { data } = await axios.get(\n    `/movie/${id}?api_key=${API_KEY}&language=en-US`\n  );\n  return data;\n};\n\nexport const fetchMovieCast = async id => {\n  const { data } = await axios.get(`/movie/${id}/credits?api_key=${API_KEY}`);\n  return data;\n};\n\nexport const fetchMovieReviews = async id => {\n  const { data } = await axios.get(`/movie/${id}/reviews?api_key=${API_KEY}`);\n  return data;\n};\nexport const fetchMovieGenre = async () => {\n  const { genres } = await axios.get(`/genre/movie/list?api_key=${API_KEY}`);\n  return genres;\n};\n"],"names":["List","styled","Item","SectionTitle","LinkTitle","Link","Img","MovieTitle","movies","sectionTitle","location","useLocation","map","id","title","poster_path","state","from","to","src","alt","ButtonContainer","LoadButton","onLoadMore","onClick","type","Form","Input","Button","onSubmit","useState","query","setQuery","event","preventDefault","Notify","position","width","fontSize","failure","background","onChange","value","target","name","autoComplete","size","Section","Container","isLoading","setIsLoading","loadMore","setLoadMore","page","setPage","searchMovies","setSearchMovies","useSearchParams","searchParams","setSearchParams","useEffect","get","trim","searchMovieByQuery","results","total_results","length","prev","Math","ceil","alert","fetchMovies","q","Loader","MoviesList","axios","API_KEY","trendingMovies","data","fetchMovieById","fetchMovieCast","fetchMovieReviews"],"sourceRoot":""}