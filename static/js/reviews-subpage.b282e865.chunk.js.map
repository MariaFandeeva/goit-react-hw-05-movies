{"version":3,"file":"static/js/reviews-subpage.b282e865.chunk.js","mappings":"8LA+BA,UAzBgB,WACd,OAA8BA,EAAAA,EAAAA,UAAS,IAAvC,eAAOC,EAAP,KAAgBC,EAAhB,KACQC,GAAYC,EAAAA,EAAAA,MAAZD,SAERE,EAAAA,EAAAA,YAAU,YACRC,EAAAA,EAAAA,IAAkBH,GAASI,MAAK,SAAAC,GAC9BN,EAAWM,EAAMC,QAClB,GACF,GAAE,CAACN,IAEJ,IAAMO,EAAOT,EAAQU,KAAI,gBAAGC,EAAH,EAAGA,GAAIC,EAAP,EAAOA,OAAQC,EAAf,EAAeA,QAAf,OACvB,2BACE,0BACE,mCACCD,KAEFC,IALMF,EADc,IASzB,OAAOX,EAAQc,OAAS,GACtB,8BAAML,MAEN,+DAEH,C,+LC5BDM,EAAAA,EAAAA,SAAAA,QAAyB,+BACzB,IAAMC,EAAU,mCAEHC,EAAc,mCAAG,sGAGlBF,EAAAA,EAAAA,IAAA,sCAAyCC,EAAzC,YAHkB,uBAElBR,EAFkB,EAE1BU,KAAQV,QAFkB,kBAIrBA,GAJqB,2CAAH,qDAOdW,EAAkB,mCAAG,WAAMC,GAAN,yFAGtBL,EAAAA,EAAAA,IAAA,gCAAmCC,EAAnC,kBAAoDI,EAApD,YAHsB,uBAEtBZ,EAFsB,EAE9BU,KAAQV,QAFsB,kBAIzBA,GAJyB,2CAAH,sDAOlBa,EAAc,mCAAG,WAAMV,GAAN,yFACLI,EAAAA,EAAAA,IAAA,iBACXJ,EADW,oBACGK,EADH,oBADK,uBACpBE,EADoB,EACpBA,KADoB,kBAIrBA,GAJqB,2CAAH,sDAOdI,EAAc,mCAAG,WAAMX,GAAN,yFACLI,EAAAA,EAAAA,IAAA,iBAAoBJ,EAApB,4BAA0CK,IADrC,uBACpBE,EADoB,EACpBA,KADoB,kBAErBA,GAFqB,2CAAH,sDAKdb,EAAiB,mCAAG,WAAMM,GAAN,yFACRI,EAAAA,EAAAA,IAAA,iBAAoBJ,EAApB,4BAA0CK,IADlC,uBACvBE,EADuB,EACvBA,KADuB,kBAExBA,GAFwB,2CAAH,qD","sources":["components/Reviews/Reviews.jsx","services/api.jsx"],"sourcesContent":["import { useState, useEffect } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { fetchMovieReviews } from 'services/api';\n\n// import { RevList, RevItem, RevText, RevError } from './Reviews.styled.jsx';\n\nconst Reviews = () => {\n  const [reviews, setReviews] = useState([]);\n  const { movieId } = useParams();\n\n  useEffect(() => {\n    fetchMovieReviews(movieId).then(items => {\n      setReviews(items.results);\n    });\n  }, [movieId]);\n\n  const rews = reviews.map(({ id, author, content }) => (\n    <li key={id}>\n      <p>\n        <b>Author:</b>\n        {author}\n      </p>\n      {content}\n    </li>\n  ));\n  return reviews.length > 0 ? (\n    <ul> {rews}</ul>\n  ) : (\n    <h3>There are no reviews for this movie</h3>\n  );\n};\nexport default Reviews;\n","import axios from 'axios';\n\naxios.defaults.baseURL = 'https://api.themoviedb.org/3';\nconst API_KEY = '894a5fcb5eb3af426933275e70f0cd83';\n\nexport const trendingMovies = async () => {\n  const {\n    data: { results },\n  } = await axios.get(`/trending/movie/day?api_key=${API_KEY}&page=1`);\n  return results;\n};\n\nexport const searchMovieByQuery = async query => {\n  const {\n    data: { results },\n  } = await axios.get(`/search/movie?api_key=${API_KEY}&query=${query}&page=1`);\n  return results;\n};\n\nexport const fetchMovieById = async id => {\n  const { data } = await axios.get(\n    `/movie/${id}?api_key=${API_KEY}&language=en-US`\n  );\n  return data;\n};\n\nexport const fetchMovieCast = async id => {\n  const { data } = await axios.get(`/movie/${id}/credits?api_key=${API_KEY}`);\n  return data;\n};\n\nexport const fetchMovieReviews = async id => {\n  const { data } = await axios.get(`/movie/${id}/reviews?api_key=${API_KEY}`);\n  return data;\n};\nexport const fetchMovieGenre = async () => {\n  const { genres } = await axios.get(`/genre/movie/list?api_key=${API_KEY}`);\n  return genres;\n};\n"],"names":["useState","reviews","setReviews","movieId","useParams","useEffect","fetchMovieReviews","then","items","results","rews","map","id","author","content","length","axios","API_KEY","trendingMovies","data","searchMovieByQuery","query","fetchMovieById","fetchMovieCast"],"sourceRoot":""}