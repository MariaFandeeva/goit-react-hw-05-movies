{"version":3,"file":"static/js/home.8bfbe7f6.chunk.js","mappings":"0NAGaA,EAAOC,EAAAA,GAAAA,GAAH,mKAUJC,EAAOD,EAAAA,GAAAA,GAAH,4GAQJE,EAAeF,EAAAA,GAAAA,GAAH,kGAMZG,GAAYH,EAAAA,EAAAA,IAAOI,EAAAA,GAAPJ,CAAH,oHAUTK,EAAML,EAAAA,GAAAA,IAAH,uKAUHM,EAAaN,EAAAA,GAAAA,EAAH,sF,SCTvB,EA1BmB,SAAC,GAAqC,IAAnCO,EAAkC,EAAlCA,OAAkC,IAA1BC,aAAAA,OAA0B,MAAX,KAAW,EAChDC,GAAWC,EAAAA,EAAAA,MAIjB,OACE,gCACGF,IAAgB,SAACN,EAAD,UAAeM,KAChC,SAACT,EAAD,UACGQ,EAAOI,KAAI,YAAiC,IAA9BC,EAA6B,EAA7BA,GAAIC,EAAyB,EAAzBA,MAAOC,EAAkB,EAAlBA,YACxB,OACE,SAACb,EAAD,WACE,UAACE,EAAD,CAAWY,MAAO,CAAEC,KAAMP,GAAYQ,GAAE,kBAAaL,GAArD,WACE,SAACP,EAAD,CACEa,IAAKJ,EAAW,UAZb,oCAYa,OAAmBA,GAXhC,iCAYHK,IAAKN,KAEP,SAACP,EAAD,UAAaO,QANND,EAUd,QAIR,C,iICnCYQ,EAAUpB,EAAAA,GAAAA,QAAH,qHAOPqB,EAAYrB,EAAAA,GAAAA,IAAH,mI,SCetB,EAjBa,WACX,OAAoCsB,EAAAA,EAAAA,UAAS,IAA7C,eAAOC,EAAP,KAAmBC,EAAnB,KAQA,OANAC,EAAAA,EAAAA,YAAU,YACRC,EAAAA,EAAAA,MAAiBC,MAAK,SAAAC,GACpBJ,EAAcI,EACf,GACF,GAAE,KAGD,SAACR,EAAD,WACE,SAACC,EAAD,WACE,SAACQ,EAAA,EAAD,CAAYtB,OAAQgB,EAAYf,aAAa,oBAIpD,C,+LCrBDsB,EAAAA,EAAAA,SAAAA,QAAyB,+BACzB,IAAMC,EAAU,mCAEHL,EAAc,mCAAG,sGAGlBI,EAAAA,EAAAA,IAAA,sCAAyCC,EAAzC,YAHkB,uBAElBC,EAFkB,EAE1BC,KAAQD,QAFkB,kBAIrBA,GAJqB,2CAAH,qDAOdE,EAAkB,mCAAG,WAAOC,GAAP,8FAAcC,EAAd,+BAAqB,EAArB,SACTN,EAAAA,EAAAA,IAAA,gCACIC,EADJ,kBACqBI,EADrB,iBACmCC,IAF1B,uBACxBH,EADwB,EACxBA,KADwB,kBAIzBA,GAJyB,2CAAH,sDAOlBI,EAAc,mCAAG,WAAMzB,GAAN,yFACLkB,EAAAA,EAAAA,IAAA,iBACXlB,EADW,oBACGmB,EADH,oBADK,uBACpBE,EADoB,EACpBA,KADoB,kBAIrBA,GAJqB,2CAAH,sDAOdK,EAAc,mCAAG,WAAM1B,GAAN,yFACLkB,EAAAA,EAAAA,IAAA,iBAAoBlB,EAApB,4BAA0CmB,IADrC,uBACpBE,EADoB,EACpBA,KADoB,kBAErBA,GAFqB,2CAAH,sDAKdM,EAAiB,mCAAG,WAAM3B,GAAN,yFACRkB,EAAAA,EAAAA,IAAA,iBAAoBlB,EAApB,4BAA0CmB,IADlC,uBACvBE,EADuB,EACvBA,KADuB,kBAExBA,GAFwB,2CAAH,qD","sources":["components/MoviesList/MoviesList.styled.jsx","components/MoviesList/MoviesList.jsx","pages/Home/Home.styled.jsx","pages/Home/Home.jsx","services/api.jsx"],"sourcesContent":["import { Link } from 'react-router-dom';\nimport styled from 'styled-components';\n\nexport const List = styled.ul`\n  display: flex;\n  flex-wrap: wrap;\n  justify-content: center;\n  gap: 32px;\n  margin: 0px auto;\n  padding: 0px;\n  list-style: none;\n`;\n\nexport const Item = styled.li`\n  margin-bottom: 30px;\n\n  &:nth-last-child(-n + 2) {\n    margin-bottom: 0;\n  }\n`;\n\nexport const SectionTitle = styled.h3`\n  margin-bottom: 20px;\n  font-size: 20px;\n  text-transform: uppercase;\n`;\n\nexport const LinkTitle = styled(Link)`\n  text-decoration: none;\n  color: #fff;\n\n  &:hover,\n  &:focus {\n    color: #aaa;\n  }\n`;\n\nexport const Img = styled.img`\n  width: 340px;\n  height: 476px;\n\n  &:hover {\n    scale: 105%;\n    transition: scale 250ms cubic-bezier(0.175, 0.885, 0.32, 1.275);\n  }\n`;\n\nexport const MovieTitle = styled.p`\n  max-width: 340px;\n  margin-top: 10px;\n  font-size: 20px;\n`;\n","import { useLocation } from 'react-router-dom';\n\nimport PropTypes from 'prop-types';\nimport {\n  List,\n  Item,\n  SectionTitle,\n  LinkTitle,\n  Img,\n  MovieTitle,\n} from './MoviesList.styled';\n\nconst MoviesList = ({ movies, sectionTitle = null }) => {\n  const location = useLocation();\n  const baseImgUrl = 'https://image.tmdb.org/t/p/w342/';\n  const defaultImg = 'https://i.ibb.co/nw331jk/1.jpg';\n\n  return (\n    <>\n      {sectionTitle && <SectionTitle>{sectionTitle}</SectionTitle>}\n      <List>\n        {movies.map(({ id, title, poster_path }) => {\n          return (\n            <Item key={id}>\n              <LinkTitle state={{ from: location }} to={`/movies/${id}`}>\n                <Img\n                  src={poster_path ? `${baseImgUrl}${poster_path}` : defaultImg}\n                  alt={title}\n                />\n                <MovieTitle>{title}</MovieTitle>\n              </LinkTitle>\n            </Item>\n          );\n        })}\n      </List>\n    </>\n  );\n};\nexport default MoviesList;\n\nMoviesList.propTypes = {\n  movies: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.number.isRequired,\n      title: PropTypes.string,\n      poster_path: PropTypes.string,\n    })\n  ),\n  sectionTitle: PropTypes.string,\n};\n","import styled from 'styled-components';\n\nexport const Section = styled.section`\n  display: flex;\n  justify-content: center;\n  padding-top: 20px;\n  padding-bottom: 20px;\n`;\n\nexport const Container = styled.div`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  width: 1280px;\n  font-size: 24px;\n`;\n","import { useState, useEffect } from 'react';\n\nimport { trendingMovies } from 'services/api';\nimport MoviesList from 'components/MoviesList/MoviesList';\n\nimport { Section, Container } from './Home.styled.jsx';\n\nconst Home = () => {\n  const [trendMovie, setTrendMovie] = useState([]);\n\n  useEffect(() => {\n    trendingMovies().then(items => {\n      setTrendMovie(items);\n    });\n  }, []);\n\n  return (\n    <Section>\n      <Container>\n        <MoviesList movies={trendMovie} sectionTitle=\"Trend Movies\" />\n      </Container>\n    </Section>\n  );\n};\nexport default Home;\n","import axios from 'axios';\n\naxios.defaults.baseURL = 'https://api.themoviedb.org/3';\nconst API_KEY = '894a5fcb5eb3af426933275e70f0cd83';\n\nexport const trendingMovies = async () => {\n  const {\n    data: { results },\n  } = await axios.get(`/trending/movie/day?api_key=${API_KEY}&page=1`);\n  return results;\n};\n\nexport const searchMovieByQuery = async (query, page = 1) => {\n  const { data } = await axios.get(\n    `/search/movie?api_key=${API_KEY}&query=${query}&page=${page}`\n  );\n  return data;\n};\n\nexport const fetchMovieById = async id => {\n  const { data } = await axios.get(\n    `/movie/${id}?api_key=${API_KEY}&language=en-US`\n  );\n  return data;\n};\n\nexport const fetchMovieCast = async id => {\n  const { data } = await axios.get(`/movie/${id}/credits?api_key=${API_KEY}`);\n  return data;\n};\n\nexport const fetchMovieReviews = async id => {\n  const { data } = await axios.get(`/movie/${id}/reviews?api_key=${API_KEY}`);\n  return data;\n};\nexport const fetchMovieGenre = async () => {\n  const { genres } = await axios.get(`/genre/movie/list?api_key=${API_KEY}`);\n  return genres;\n};\n"],"names":["List","styled","Item","SectionTitle","LinkTitle","Link","Img","MovieTitle","movies","sectionTitle","location","useLocation","map","id","title","poster_path","state","from","to","src","alt","Section","Container","useState","trendMovie","setTrendMovie","useEffect","trendingMovies","then","items","MoviesList","axios","API_KEY","results","data","searchMovieByQuery","query","page","fetchMovieById","fetchMovieCast","fetchMovieReviews"],"sourceRoot":""}