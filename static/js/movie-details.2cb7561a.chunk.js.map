{"version":3,"file":"static/js/movie-details.2cb7561a.chunk.js","mappings":"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","sources":["pages/MovieDetails/MovieDetails.styled.jsx","pages/MovieDetails/MovieDetails.jsx","services/api.jsx"],"sourcesContent":["import { Link } from 'react-router-dom';\n\nimport styled from 'styled-components';\n\nexport const Section = styled.section`\n  display: flex;\n  justify-content: center;\n  padding-top: 20px;\n  padding-bottom: 20px;\n`;\n\nexport const Container = styled.div`\n  display: flex;\n  flex-direction: row;\n  flex-wrap: wrap;\n  width: 100%;\n  margin: 0 auto;\n  padding: 0 30px;\n`;\n\nexport const Button = styled.button`\n  display: flex;\n  align-items: center;\n  margin-bottom: 20px;\n  padding: 8px 10px 8px 10px;\n  background-color: rgba(255, 255, 255, 0.1);\n  color: #fff;\n  font-size: 18px;\n  text-decoration: none;\n  border-radius: 5px;\n  border: none;\n  cursor: pointer;\n\n  &:hover,\n  &:focus {\n    background-color: rgba(255, 255, 255, 0.2);\n  }\n`;\n\nexport const MovieItem = styled.div`\n  display: flex;\n  align-items: flex-start;\n`;\n\nexport const MovieImg = styled.img`\n  width: 400px;\n  height: 600px;\n`;\n\nexport const MovieDescription = styled.div`\n  display: flex;\n  flex-direction: column;\n  padding: 0 80px 0 60px;\n`;\n\nexport const MovieTitle = styled.h3`\n  margin-bottom: 100px;\n  color: #fff;\n  font-size: 30px;\n  text-transform: uppercase;\n`;\n\nexport const MovieText = styled.p`\n  margin-bottom: 20px;\n  color: #fff;\n  font-size: 16px;\n`;\n\nexport const MoreDetails = styled.div`\n  margin-top: 100px;\n`;\n\nexport const MoreDetailsList = styled.ul`\n  display: flex;\n`;\n\nexport const MoreDetailsItem = styled.li`\n  //   &:not(: last-of-type) {\n  margin-right: 10px;\n  //   }\n  //\n`;\n\nexport const MoreDetailsButton = styled(Link)`\n  display: flex;\n  align-items: center;\n  padding: 8px 18px;\n  background-color: rgba(255, 255, 255, 0.1);\n  color: #fff;\n  font-size: 18px;\n  text-decoration: none;\n  border-radius: 8px;\n  border: none;\n  cursor: pointer;\n\n  &:hover,\n  &:focus {\n    background-color: rgba(255, 255, 255, 0.2);\n  }\n`;\n","import { useState, useEffect } from 'react';\nimport { useNavigate, useLocation, useParams, Outlet } from 'react-router-dom';\nimport { fetchMovieById } from 'services/api';\n\nimport {\n  Section,\n  Container,\n  Button,\n  MovieItem,\n  MovieImg,\n  MovieDescription,\n  MovieTitle,\n  MovieText,\n  MoreDetails,\n  MoreDetailsList,\n  MoreDetailsButton,\n  MoreDetailsItem,\n} from './MovieDetails.styled.jsx';\n\nconst items = [\n  { text: 'Cast', href: 'cast' },\n  { text: 'Reviews', href: 'reviews' },\n];\n\nconst MovieDetails = () => {\n  const [movie, setMovie] = useState({});\n  const navigate = useNavigate();\n  const { movieId } = useParams();\n  const location = useLocation();\n\n  const from = location.state?.from ?? '/';\n\n  useEffect(() => {\n    fetchMovieById(movieId).then(items => {\n      setMovie(items);\n    });\n  }, [movieId]);\n\n  const goBack = () => navigate(from);\n\n  const { overview, title, genres = [], vote_average, poster_path } = movie;\n\n  const genreFilter = genres.map(genre => genre.name).join(' ');\n  const baseImgUrl = 'https://image.tmdb.org/t/p/w500/';\n  const defaultImg = '/public/images/film_poster_not_found.jpg';\n\n  return (\n    <Section>\n      <Container>\n        {<Button onClick={goBack}>Go back</Button>}\n        <MovieItem>\n          <MovieImg\n            src={poster_path ? `${baseImgUrl}${movie.poster_path}` : defaultImg}\n            alt={title}\n            // width=\"300\"\n          />\n          <MovieDescription>\n            <MovieTitle>{title}</MovieTitle>\n            <MovieText>\n              <b>Rating:</b>\n              {vote_average}\n            </MovieText>\n            <MovieText>\n              <b>Overview:</b>\n              {overview}\n            </MovieText>\n            <MovieText>\n              <b>Genres:</b>\n              {genreFilter}\n            </MovieText>\n            <MoreDetails>\n              <MovieText>\n                <b>Additional Information</b>\n              </MovieText>\n              <MoreDetailsList>\n                {items.map(({ text, href }) => (\n                  <MoreDetailsItem key={text}>\n                    <MoreDetailsButton state={{ from }} to={href}>\n                      {text}\n                    </MoreDetailsButton>\n                  </MoreDetailsItem>\n                ))}\n              </MoreDetailsList>\n            </MoreDetails>\n          </MovieDescription>\n        </MovieItem>\n        <Outlet />\n      </Container>\n    </Section>\n  );\n};\nexport default MovieDetails;\n","import axios from 'axios';\n\naxios.defaults.baseURL = 'https://api.themoviedb.org/3';\nconst API_KEY = '894a5fcb5eb3af426933275e70f0cd83';\n\nexport const trendingMovies = async () => {\n  const {\n    data: { results },\n  } = await axios.get(`/trending/movie/day?api_key=${API_KEY}&page=1`);\n  return results;\n};\n\nexport const searchMovieByQuery = async query => {\n  const {\n    data: { results },\n  } = await axios.get(`/search/movie?api_key=${API_KEY}&query=${query}&page=1`);\n  return results;\n};\n\nexport const fetchMovieById = async id => {\n  const { data } = await axios.get(\n    `/movie/${id}?api_key=${API_KEY}&language=en-US`\n  );\n  return data;\n};\n\nexport const fetchMovieCast = async id => {\n  const { data } = await axios.get(`/movie/${id}/credits?api_key=${API_KEY}`);\n  return data;\n};\n\nexport const fetchMovieReviews = async id => {\n  const { data } = await axios.get(`/movie/${id}/reviews?api_key=${API_KEY}`);\n  return data;\n};\nexport const fetchMovieGenre = async () => {\n  const { genres } = await axios.get(`/genre/movie/list?api_key=${API_KEY}`);\n  return genres;\n};\n"],"names":["Section","styled","Container","Button","MovieItem","MovieImg","MovieDescription","MovieTitle","MovieText","MoreDetails","MoreDetailsList","MoreDetailsItem","MoreDetailsButton","Link","items","text","href","useState","movie","setMovie","navigate","useNavigate","movieId","useParams","from","useLocation","state","useEffect","fetchMovieById","then","overview","title","genres","vote_average","poster_path","genreFilter","map","genre","name","join","onClick","src","alt","to","axios","API_KEY","trendingMovies","results","data","searchMovieByQuery","query","id","fetchMovieCast","fetchMovieReviews"],"sourceRoot":""}